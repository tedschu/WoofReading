// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Score {
  id   Int   @id @default(autoincrement())
  addition_score  Int? @default(0)
  subtraction_score  Int?  @default(0)
  multiplication_score  Int? @default(0)
  division_score  Int? @default(0)
  user User @relation(fields: [user_id], references: [id])
  user_id Int @unique
}

model User {
  id  Int  @id @default(autoincrement())
  name String?
  birth_year Int?
  email String
  username String @unique
  password String
  security_question_1 String
  security_question_2 String
  security_answer_1 String
  security_answer_2 String
  total_logins Int
  last_login DateTime
  has_WoofReading Boolean?
  score Score?
  badge Badge?
  game_state Game_state?
  score_reading Score_reading?
  badge_reading Badge_reading?
}

model Badge {
  id Int @id @default(autoincrement())
  bernese Boolean? @default(false)
  boxer Boolean? @default(false)
  cat Boolean? @default(false)
  chihuahua Boolean? @default(false)
  golden Boolean? @default(false)
  husky Boolean? @default(false)
  goldendoodle_trophy Boolean? @default(false)
  user User @relation(fields: [user_id], references: [id])
  user_id Int @unique
}

model Game_state {
  id Int @id @default(autoincrement())
  json_setting String
  user User @relation(fields: [user_id], references: [id])
  user_id Int @unique
}

model Score_reading {
  id   Int   @id @default(autoincrement())
  score  Int? @default(0)
  user User @relation(fields: [user_id], references: [id])
  user_id Int @unique
}

model Badge_reading {
  id Int @id @default(autoincrement())
  bernese Boolean? @default(false)
  boxer Boolean? @default(false)
  cat Boolean? @default(false)
  chihuahua Boolean? @default(false)
  golden Boolean? @default(false)
  husky Boolean? @default(false)
  waterdog Boolean? @default(false)
  goldendoodle_trophy Boolean? @default(false)
  user User @relation(fields: [user_id], references: [id])
  user_id Int @unique
}


